{
  "meta-llama/Llama-3.2-1B": {
    "none": {
      "error": "Caught ValueError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 767, in convert_to_tensors\n    tensor = as_tensor(value)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 729, in as_tensor\n    return torch.tensor(value)\nValueError: too many dimensions 'str'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 351, in _worker_loop\n    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 55, in fetch\n    return self.collate_fn(data)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 272, in __call__\n    batch = pad_without_fast_tokenizer_warning(\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 67, in pad_without_fast_tokenizer_warning\n    padded = tokenizer.pad(*pad_args, **pad_kwargs)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 3429, in pad\n    return BatchEncoding(batch_outputs, tensor_type=return_tensors)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 240, in __init__\n    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 783, in convert_to_tensors\n    raise ValueError(\nValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`text` in this case) have excessive nesting (inputs type `list` where type `int` is expected).\n",
      "status": "error"
    },
    "attention": {
      "error": "Caught ValueError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 767, in convert_to_tensors\n    tensor = as_tensor(value)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 729, in as_tensor\n    return torch.tensor(value)\nValueError: too many dimensions 'str'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 351, in _worker_loop\n    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 55, in fetch\n    return self.collate_fn(data)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 272, in __call__\n    batch = pad_without_fast_tokenizer_warning(\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 67, in pad_without_fast_tokenizer_warning\n    padded = tokenizer.pad(*pad_args, **pad_kwargs)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 3429, in pad\n    return BatchEncoding(batch_outputs, tensor_type=return_tensors)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 240, in __init__\n    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 783, in convert_to_tensors\n    raise ValueError(\nValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`text` in this case) have excessive nesting (inputs type `list` where type `int` is expected).\n",
      "status": "error"
    },
    "routing": {
      "error": "Caught ValueError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 767, in convert_to_tensors\n    tensor = as_tensor(value)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 729, in as_tensor\n    return torch.tensor(value)\nValueError: too many dimensions 'str'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 351, in _worker_loop\n    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 55, in fetch\n    return self.collate_fn(data)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 272, in __call__\n    batch = pad_without_fast_tokenizer_warning(\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 67, in pad_without_fast_tokenizer_warning\n    padded = tokenizer.pad(*pad_args, **pad_kwargs)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 3429, in pad\n    return BatchEncoding(batch_outputs, tensor_type=return_tensors)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 240, in __init__\n    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 783, in convert_to_tensors\n    raise ValueError(\nValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`text` in this case) have excessive nesting (inputs type `list` where type `int` is expected).\n",
      "status": "error"
    },
    "layers": {
      "error": "Caught ValueError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 767, in convert_to_tensors\n    tensor = as_tensor(value)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 729, in as_tensor\n    return torch.tensor(value)\nValueError: too many dimensions 'str'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 351, in _worker_loop\n    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 55, in fetch\n    return self.collate_fn(data)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 272, in __call__\n    batch = pad_without_fast_tokenizer_warning(\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 67, in pad_without_fast_tokenizer_warning\n    padded = tokenizer.pad(*pad_args, **pad_kwargs)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 3429, in pad\n    return BatchEncoding(batch_outputs, tensor_type=return_tensors)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 240, in __init__\n    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 783, in convert_to_tensors\n    raise ValueError(\nValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`text` in this case) have excessive nesting (inputs type `list` where type `int` is expected).\n",
      "status": "error"
    },
    "moe": {
      "error": "Caught ValueError in DataLoader worker process 0.\nOriginal Traceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 767, in convert_to_tensors\n    tensor = as_tensor(value)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 729, in as_tensor\n    return torch.tensor(value)\nValueError: too many dimensions 'str'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/worker.py\", line 351, in _worker_loop\n    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/torch/utils/data/_utils/fetch.py\", line 55, in fetch\n    return self.collate_fn(data)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 272, in __call__\n    batch = pad_without_fast_tokenizer_warning(\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/data/data_collator.py\", line 67, in pad_without_fast_tokenizer_warning\n    padded = tokenizer.pad(*pad_args, **pad_kwargs)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 3429, in pad\n    return BatchEncoding(batch_outputs, tensor_type=return_tensors)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 240, in __init__\n    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)\n  File \"/home/xl598/anaconda3/envs/stratified-manifold-learning/lib/python3.9/site-packages/transformers/tokenization_utils_base.py\", line 783, in convert_to_tensors\n    raise ValueError(\nValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`text` in this case) have excessive nesting (inputs type `list` where type `int` is expected).\n",
      "status": "error"
    }
  }
}